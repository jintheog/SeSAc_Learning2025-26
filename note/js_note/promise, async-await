# Promise

- 비동기 작업의 성공 또는 실패를 나타내는 객체
- 비동기 처리 완료 후, 결과를 나중에 처리하기 위한 약속

## Promise의 3가지 상태

- Pending(대기): 비동기 작업이 아직 끝나지 않은 초기 상태
- Fulfilled(이행): 비동기 작업이 성공적으로 완료된 상태
- Rejected(거절): 비동기 작업이 실패한 상태

# Promise 객체 생성 및 사용법

## Promise 생성자 함수

- `Promise` 생성자 함수는 비동기 작업을 수행하고, 결과를 반환하는 함수를 인자로 받음 (resolve, reject)
- `resolve`: 비동기 작업 성공 시 호출, 이행 상태로 변경
- `reject`: 비동기 작업 실패 시 호출, 거절 상태로 변경
- `resolve` 또는 reject 함수 호출 시 비동기 작업 종료

`resolve()` : 성공을 나타내는 함수

# async await

- Promise를 더 쉽고 가독성 좋게 사용하는 문법
- `then()`, `catch()`, `finally()` 문법 대체
- `async`: 함수가 비동기 처리를 포함함을 선언하는 키워드
- `await`: `async` 함수 내부에서 Promise가 완료될 때까지 기다리는 키워드
